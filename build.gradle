plugins {
	id "org.xtend.xtend" version "0.4.8"
	id "net.researchgate.release" version "2.2.0"
	id "com.jfrog.bintray" version "1.2"
}

allprojects {
	repositories {
		jcenter()
	}
}

subprojects {
	apply plugin: "org.xtend.xtend"
	apply plugin: "maven"
	group = "de.xtendutils"

	apply plugin: "com.jfrog.bintray"
	bintray {
		user = System.getenv('BINTRAY_USER')
		key = System.getenv('BINTRAY_KEY')
		configurations = ['archives']
		pkg {
			repo = 'maven'
			name = 'xtendutils'
			licenses = ['EPL-1.0']
			vcsUrl = 'https://github.com/franzbecker/xtendutils.git'
			version {
				name = "${project.version}"
			}
		}
	}

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	project.ext {
		/* Configure versions that are either likely to change or need to be reused. */
		versions = [
			xtend: "2.8+",
			junit: "4.12+"
		]
	}

	dependencies {
		compile "org.eclipse.xtend:org.eclipse.xtend.lib:${versions.xtend}"
		compile "com.google.code.findbugs:jsr305:3.0.0"
		compile "com.google.inject:guice:4.0"
		testCompile "junit:junit:${versions.junit}"
		testCompile "org.assertj:assertj-core:3.0.0"

		// Provide de.xtendutils.junit as a test-dependency to every other subproject
		if (project.name != "junit") {
			testCompile project(':junit')
		}
	}

	sourceSets {
  		main.xtendOutputDir = "src/main/xtend-gen"
  		test.xtendOutputDir = "src/test/xtend-gen"
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier 'sources'
		from sourceSets.main.allSource
	}

	artifacts {
		archives sourcesJar
	}

	// TODO should be removed eventually
	test {
    	afterTest { desc, result ->
        	println "  Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    	}
	}

}

/*
 * Configure release plugin.
 * Remove tasks "updateVersion" and "commitNewVersion" as we don't want the new SNAPSHOT
 * version commit on the master branch.
 */
tasks.release.tasks -= ["updateVersion", "commitNewVersion"]
release {
	preTagCommitMessage = '[release] - pre tag commit: '
	tagCommitMessage = '[release] - creating tag: '
	newVersionCommitMessage = '[release] - new version commit: '
}
